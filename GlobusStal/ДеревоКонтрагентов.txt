&НаКлиенте
Процедура ГоловнойКонтрагентНаименованиеНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.ГоловнойКонтрагент);
КонецПроцедуры

&НаСервере  
Функция ПолучениеПодчиненныхКонтрагентовНаСервере(ТекКонтрагент,КонтрагентДляПроверки,ТекПробел="", МассивСтрок,СменаКомпании)
	Зап = Новый Запрос; 
	Зап.Текст = "ВЫБРАТЬ
	            |	Контрагенты.Ссылка,
				|	Контрагенты.Наименование,
				|	Контрагенты.Статус,
				|	Контрагенты.ГоловнойКонтрагент
	            |ИЗ
	            |	Справочник.глб_Контрагенты КАК Контрагенты
	            |ГДЕ
	            |	Контрагенты.ГоловнойКонтрагент = &ТекКонтрагент
				|УПОРЯДОЧИТЬ ПО Контрагенты.Наименование";
	ЭтоПодчиненный = ?(ЗначениеЗаполнено(ТекКонтрагент.ГоловнойКонтрагент),Истина, Ложь); 
	Зап.УстановитьПараметр("ТекКонтрагент",ТекКонтрагент);			
	РезультатЗапроса = Зап.Выполнить();
	СтрокиЗапроса = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	 
	Если (СтрокиЗапроса.Количество() = 0) И (ЭтоПодчиненный = Ложь) Тогда
		ДеревоКомпаний = "НЕТ";	
		МассивСтрок.Очистить(); 
		ПодчиненныеКонтрагенты.Очистить(); 
		Возврат Истина;
	КонецЕсли;  

	СчетчикПоследнего = 0;
	Пока СтрокиЗапроса.Следующий() Цикл
		СчетчикПоследнего=СчетчикПоследнего+1;
               
		Если (КонтрагентДляПроверки = СтрокиЗапроса.Ссылка) И СменаКомпании Тогда
			ДеревоКомпаний = "НЕТ";
			Возврат Ложь;
		КонецЕсли;   
		
		Зап.УстановитьПараметр("ТекКонтрагент",СтрокиЗапроса.Ссылка); 
		РезультатЗапросаПодчиненные = Зап.Выполнить();
		СтрокиЗапросаПодчиненные = РезультатЗапросаПодчиненные.Выбрать(ОбходРезультатаЗапроса.Прямой);
		
		ИтогОтступ = "";
		ПодчиненныйОтступ = ""; 
		Если СчетчикПоследнего = СтрокиЗапроса.Количество() Тогда
			ИтогОтступ = ТекПробел+Символ(9495);
			ПодчиненныйОтступ = ТекПробел+"       ";
		Иначе
			ИтогОтступ = ТекПробел+Символ(9507);
			ПодчиненныйОтступ = ТекПробел+Символ(9475)+"    ";
		КонецЕсли;
		
		Если Объект.Ссылка = СтрокиЗапроса.Ссылка Тогда 
			МассивСтрок.Добавить(Объект.Наименование);	
			ПодчиненныеКонтрагенты.Добавить("Текущий контрагент", ИтогОтступ+"  "+Объект.Наименование + " (" +Объект.Статус+") (ТЕКУЩИЙ)");	
		Иначе
			МассивСтрок.Добавить(СтрокиЗапроса.Наименование);	
			ПодчиненныеКонтрагенты.Добавить(СтрокиЗапроса.Ссылка, ИтогОтступ+"  "+СтрокиЗапроса.Наименование + " (" +СтрокиЗапроса.Статус+")");
		КонецЕсли;
		
		Если СтрокиЗапросаПодчиненные.Количество() > 0 Тогда 
			УспешноеВыполнение = ПолучениеПодчиненныхКонтрагентовНаСервере(СтрокиЗапроса.Ссылка,КонтрагентДляПроверки,ПодчиненныйОтступ, МассивСтрок,СменаКомпании); 
			Если УспешноеВыполнение = Ложь Тогда
				Возврат Ложь;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
    Возврат Истина;
КонецФункции 


&НаКлиенте
Процедура ОповещениеОВыбореПодчиненныхКонтрагентов(ВыбранныйЭлемент, ДопПараметры) Экспорт  
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ПоказатьЗначение(,ВыбранныйЭлемент.Значение);
	КонецЕсли;
КонецПроцедуры   

&НаКлиенте
Процедура ПолучениеПодчиненныхКонтрагентов(СменаКомпании = Ложь)
	Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда
		ДеревоКомпаний = "ОШИБКА";  
		УстановитьНадписьДокумента("ДеревоКомпаний",Неопределено);
		Возврат;
	КонецЕсли;
	
	Если СменаКомпании И Объект.ГоловнойКонтрагент.Пустая() Тогда
		УстановитьНадписьДокумента("ДеревоКомпаний",ПолучитьГоловногоКонтрагентДляДерева(Объект.Ссылка,Объект.ГоловнойКонтрагент));
		Возврат;
	КонецЕсли;
	ПодчиненныеКонтрагенты.Очистить();
	МассивСтрок=Новый Массив;
	Если Объект.ГоловнойКонтрагент = Объект.Ссылка Тогда
		ПоказатьПредупреждение(,"Нельзя назначить головным контрагентом этого контрагента этого же контрагента!");
		Объект.ГоловнойКонтрагент = Неопределено;
		ДеревоКомпаний = "НЕТ";
		УстановитьНадписьДокумента("ДеревоКомпаний",Неопределено);
		Возврат;
	КонецЕсли; 
	ОшибкаВерхнийКонтрагент = Ложь;   
	МассивКонтрагентов = Новый Массив; 
	ВерхнийКонтрагент = ПолучитьСамогоВерхнегоКонтрагента(Объект,МассивКонтрагентов);
	
	Если (ВерхнийКонтрагент=Неопределено) Тогда
		ДеревоКомпаний = "ОШИБКА";  
		УстановитьНадписьДокумента("ДеревоКомпаний",Неопределено);
		Возврат;
	КонецЕсли;   
	
	Если ВерхнийКонтрагент <> Объект.Ссылка Тогда 
		ТекСтруктура = ПолучитьРеквизитыГоловногоКонтрагента(ВерхнийКонтрагент);
		МассивСтрок.Добавить(ТекСтруктура.Наименование);
		ПодчиненныеКонтрагенты.Добавить(ВерхнийКонтрагент, "ГОЛОВНОЙ: " + ТекСтруктура.Наименование + " (" +ТекСтруктура.Статус+")");	
	Иначе
		МассивСтрок.Добавить(Объект.Наименование);
		ПодчиненныеКонтрагенты.Добавить("Текущий контрагент", Объект.Наименование + " (" +Объект.Статус+") (ТЕКУЩИЙ)");	
	КонецЕсли;
		
	ТекКонтрагент = ?(СменаКомпании ИЛИ (ВерхнийКонтрагент = Объект.Ссылка),Объект.Ссылка,ВерхнийКонтрагент);
	УспешноеВыполнение = ПолучениеПодчиненныхКонтрагентовНаСервере(ТекКонтрагент,Объект.ГоловнойКонтрагент,,МассивСтрок,СменаКомпании);
	УстановитьНадписьДокумента("ДеревоКомпаний",Объект.ГоловнойКонтрагент);
	Если УспешноеВыполнение = Ложь Тогда 
		ПоказатьПредупреждение(,"Контрагент " + Объект.ГоловнойКонтрагент + " является подчиненным "+
			"контрагентом для данного! Данное действие невозможно!");
		Объект.ГоловнойКонтрагент = Неопределено;
		ПолучениеПодчиненныхКонтрагентов();
		Возврат;
	КонецЕсли;
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыГоловногоКонтрагента(ТекКонтрагент)
	Данные = Новый Структура;
	Данные.Вставить("Наименование", ТекКонтрагент.Наименование);
	Данные.Вставить("Статус", ТекКонтрагент.Статус);
	Данные.Вставить("ГоловнойКонтрагент", ТекКонтрагент.ГоловнойКонтрагент);
	Возврат Данные;
КонецФункции   

&НаСервереБезКонтекста
Функция ПолучитьСамогоВерхнегоКонтрагента(Знач Контрагент,МассивКонтрагентов)
	МассивКонтрагентов.Добавить(Контрагент);
	Если ЗначениеЗаполнено(Контрагент.ГоловнойКонтрагент) Тогда
		Если МассивКонтрагентов.Найти(Контрагент.ГоловнойКонтрагент) = Неопределено Тогда
			Возврат ПолучитьСамогоВерхнегоКонтрагента(Контрагент.ГоловнойКонтрагент,МассивКонтрагентов);
		Иначе 
			Возврат Неопределено;
		КонецЕсли;	
	Иначе     
		Возврат Контрагент.Ссылка; 	
	КонецЕсли;  
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтатусКонтрагента(ТекКонтрагент)
	Возврат ТекКонтрагент.Статус;	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьГоловногоКонтрагентДляДерева(Ссылка,ГоловнойКонтрагент)
	Если Ссылка.Пустая() Тогда
		Возврат Неопределено;
	КонецЕсли;
	Если ЗначениеЗаполнено(ГоловнойКонтрагент) Тогда
		Возврат ГоловнойКонтрагент;
	КонецЕсли;
	Зап=Новый Запрос;
	Зап.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	            |	Контрагенты.Ссылка
	            |ИЗ
	            |	Справочник.глб_Контрагенты КАК Контрагенты
	            |ГДЕ
	            |	Контрагенты.ГоловнойКонтрагент = &ТекКонтрагент";
	Зап.УстановитьПараметр("ТекКонтрагент",Ссылка);			
	Рез=Зап.Выполнить();
	Возврат ?(Рез.Пустой(),Неопределено,Ссылка);
КонецФункции
	
&НаСервереБезКонтекста
Процедура ЗаполнитьСписокДопОтраслей(Знач ТекДопОтрасли,СписокДопОтрасли)
	СписокДопОтрасли.Очистить();
	Для Каждого ТекСтрока Из ТекДопОтрасли Цикл
		ТекДок = ТекСтрока.Отрасль;
		Представление = ТекСтрока.Отрасль.Наименование;
		СписокДопОтрасли.Добавить(ТекДок,Представление);
	КонецЦикла;
КонецПроцедуры 